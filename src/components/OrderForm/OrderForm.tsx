//MODULE 4 / 8 FORMIK
/**–ï–ª–µ–º–µ–Ω—Ç–∏ —Ñ–æ—Ä–º–∏
Formik –Ω–∞–¥–∞—î –Ω–∞–±—ñ—Ä –≥–æ—Ç–æ–≤–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤, —è–∫—ñ –ø–æ–ª–µ–≥—à—É—é—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–æ—Ä–º —É React. –í—ñ–Ω –±–µ—Ä–µ –Ω–∞ —Å–µ–±–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å—Ç–∞–Ω–æ–º –ø–æ–ª—ñ–≤, –≤–∞–ª—ñ–¥–∞—Ü—ñ—é, –æ–±—Ä–æ–±–∫—É —Å–∞–±–º—ñ—Ç—É —Ç–æ—â–æ.

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç Formik

–ü–æ—á–∏–Ω–∞—î–º–æ –ø–æ–±—É–¥–æ–≤—É —Ñ–æ—Ä–º–∏ –∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Formik, —è–∫–∏–π –∫–µ—Ä—É—î –≤—Å—ñ—î—é –ª–æ–≥—ñ–∫–æ—é —Ñ–æ—Ä–º–∏. */
//.....................................................
// import { Formik } from 'formik';

// export default function OrderForm() {
//   return (
//     <Formik initialValues={{}} onSubmit={() => {}}>
//       {/* –î–∞–ª—ñ –π–¥—É—Ç—å –µ–ª–µ–º–µ–Ω—Ç–∏ —Ñ–æ—Ä–º–∏ */}
//     </Formik>
//   );
// }
//.....................................................
/**–û–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ –ø—Ä–æ–ø—Å–∏:

initialValues ‚Äì –æ–±‚Äô—î–∫—Ç –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å –ø–æ–ª—ñ–≤.
onSubmit ‚Äì —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ —Å–∞–±–º—ñ—Ç—ñ —Ñ–æ—Ä–º–∏.
–ë—É–¥–µ–º–æ –∑–∞–ø–æ–≤–Ω—é–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —Ü–∏—Ö –ø—Ä–æ–ø—Å—ñ–≤ –ø–æ—Å—Ç—É–ø–æ–≤–æ –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ñ–æ—Ä–º–∏.

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç Form

Formik –Ω–∞–¥–∞—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Form, —è–∫–∏–π —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è —É HTML —è–∫ <form> —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—ñ–¥–∫–ª—é—á–∞—î –æ–±—Ä–æ–±–Ω–∏–∫ —Å–∞–±–º—ñ—Ç—É. */
//.................................
// import { Formik, Form } from 'formik';

// export default function OrderForm() {
//   return (
//     <Formik initialValues={{}} onSubmit={() => {}}>
//       <Form>
//         {/* –ü–æ–ª—è */}
//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }
//...........................................................
/**–ö–æ–º–ø–æ–Ω–µ–Ω—Ç Field

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç Field ‚Äì —Ü–µ –æ–±–≥–æ—Ä—Ç–∫–∞ –Ω–∞–¥ input, textarea –∞–±–æ select. –í—ñ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–ª—ñ–¥–∫—É—î –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–æ–ª—è —Ç–∞ –≤—ñ–¥—Å—Ç–µ–∂—É—î –¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –ö–æ–∂–Ω–æ–º—É –ø–æ–ª—é –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ type —Ç–∞ name. */
//.......................................
// import { Formik, Form, Field } from 'formik';

// export default function OrderForm() {
//   return (
//     <Formik initialValues={{}} onSubmit={() => {}}>
//       <Form>
//         <Field type="text" name="username" />
//         <Field type="email" name="email" />
//         <button type="submit"></button>
//       </Form>
//     </Formik>
//   );
// }
//.................................................................
// –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –≤–∫–∞–∑—É–π—Ç–µ name, —ñ–Ω–∞–∫—à–µ Formik –Ω–µ –∑–º–æ–∂–µ –≤—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ —Ü–µ –ø–æ–ª–µ. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Field –ø–æ–≤'—è–∑—É—î –ø–æ–ª—è —Ñ–æ—Ä–º–∏ —ñ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é –ª–æ–≥—ñ–∫—É –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏, —è–∫–∞ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ Formik.

// ======================–†–æ–∑–º—ñ—Ç–∫–∞ —Ñ–æ—Ä–º–∏===========================//

// Formik –Ω–µ –º–∞—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ label, fieldset, legend, —Ç–æ–∂ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–≤–∏—á–∞–π–Ω—ñ HTML-—Ç–µ–≥–∏. –©–æ–± –ø–æ–≤‚Äô—è–∑–∞—Ç–∏ label —ñ–∑ –ø–æ–ª–µ–º ‚Äì –¥–æ–¥–∞—î–º–æ –∞—Ç—Ä–∏–±—É—Ç htmlFor —Ç–∞ id. –î–ª—è —Ü—å–æ–≥–æ –∑—Ä—É—á–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ useId.

//...........................................................................
// import { useId } from 'react';
// import { Formik, Form, Field } from 'formik';

// export default function OrderForm() {
//   const fieldId = useId();

//   return (
//     <Formik initialValues={{}} onSubmit={() => {}}>
//       <Form>
//         <fieldset>
//           <legend>Client Info</legend>

//           <label htmlFor={`${fieldId}-username`}>Name</label>
//           <Field type="text" name="username" id={`${fieldId}-username`} />

//           <label htmlFor={`${fieldId}-email`}>Email</label>
//           <Field type="email" name="email" id={`${fieldId}-email`} />
//         </fieldset>

//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }
//...........................................................

/**================================–°—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è===============================

Formik-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏, —è–∫—ñ —Ä–µ–Ω–¥–µ—Ä—è—Ç—å HTML-–µ–ª–µ–º–µ–Ω—Ç–∏ (Form, Field) ‚Äì –º–æ–∂–Ω–∞ —Å—Ç–∏–ª—ñ–∑—É–≤–∞—Ç–∏ –Ω–∞–ø—Ä—è–º—É —á–µ—Ä–µ–∑ className. Formik —è–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ‚Äì –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –∂–æ–¥–Ω–æ–≥–æ HTML-–µ–ª–µ–º–µ–Ω—Ç–∞, —Ç–æ–º—É —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—è –π–æ–≥–æ –Ω–µ —Å—Ç–æ—Å—É—î—Ç—å—Å—è. */
//...............................................

// import { useId } from 'react';
// import { Formik, Form, Field } from 'formik';
// import css from './OrderForm.module.css';

// export default function OrderForm() {
//   const fieldId = useId();

//   return (
//     <Formik initialValues={{}} onSubmit={() => {}}>
//       <Form className={css.form}>
//         <fieldset className={css.fieldset}>
//           <legend className={css.legend}>Client Info</legend>

//           <label className={css.label} htmlFor={`${fieldId}-username`}>
//             Name
//           </label>
//           <Field
//             className={css.field}
//             type="text"
//             name="username"
//             id={`${fieldId}-username`}
//           />

//           <label className={css.label} htmlFor={`${fieldId}-email`}>
//             Email
//           </label>
//           <Field
//             className={css.field}
//             type="email"
//             name="email"
//             id={`${fieldId}-email`}
//           />
//         </fieldset>

//         <button className={css.btn} type="submit">
//           Place order
//         </button>
//       </Form>
//     </Formik>
//   );
// }

//.......................................................................
/**------------------–ü–æ—á–∞—Ç–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤--------------------//
Formik –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–µ—Ä—É—î –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –ø–æ–ª—ñ–≤, –∑–±–µ—Ä—ñ–≥–∞—é—á–∏ —ó—Ö —É —Å–≤–æ—î–º—É –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–º—É —Å—Ç–∞–Ω—ñ ‚Äì –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç–∏ initialValues.

–ó–Ω–∞—á–µ–Ω–Ω—è –ø—Ä–æ–ø—Å–∞ initialValues ‚Äì —Ü–µ –æ–±'—î–∫—Ç, —É —è–∫–æ–º—É –∫–æ–∂–µ–Ω –∫–ª—é—á ‚Äì —Ü–µ –Ω–∞–∑–≤–∞ –ø–æ–ª—è (name), –∞ –∫–æ–∂–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äì –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ü—å–æ–≥–æ –ø–æ–ª—è. –ö–ª—é—á—ñ –≤ initialValues –º–∞—é—Ç—å —Ç–æ—á–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ name —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö Field.
 */
// import { Formik, Form, Field } from 'formik';

// export default function OrderForm() {
//   return (
//     <Formik
//       initialValues={{
//         username: 'your name',
//         email: '@',
//       }}
//       onSubmit={() => {}}
//     >
//       <Form>
//         <Field type="text" name="username" />
//         <Field type="email" name="email" />
//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }
//......................................................
/**---------------–¢–∏–ø—ñ–∑–∞—Ü—ñ—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å-------------------

–©–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫ —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–∫–∞–∑–∫–∏ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ñ, –≤–∞–∂–ª–∏–≤–æ —Ç–∏–ø—ñ–∑—É–≤–∞—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏.

–°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —è–∫–∏–π –æ–ø–∏—Å—É—î –æ–±‚Äô—î–∫—Ç –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å:

interface OrderFormValues {
  username: string;
  email: string;
}

–í–∏–Ω–æ—Å–∏–º–æ –æ–±‚Äô—î–∫—Ç –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å —É –∑–æ–≤–Ω—ñ—à–Ω—é –∑–º—ñ–Ω–Ω—É —ñ —Ç–∏–ø—ñ–∑—É—î–º–æ. */
//.....................................................................
// import { Formik, Form, Field } from 'formik';

// interface OrderFormValues {
//   username: string;
//   email: string;
// }

// const initialValues: OrderFormValues = {
//   username: 'Mike',
//   email: 'mike@mail',
// };

// export default function OrderForm() {
//   return (
//     <Formik<OrderFormValues> initialValues={initialValues} onSubmit={() => {}}>
//       <Form>
//         <Field type="text" name="username" />
//         <Field type="email" name="email" />
//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }
//................................................................
//‚úÖüß† Formik —Å–∞–º "–≤–∏–≤–µ–¥–µ" —Ç–∏–ø OrderFormValues –∑ initialValues, —Ç–æ–º—É –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π generic –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω. –ê–ª–µ —è–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ, –º–æ–∂–µ—Ç–µ –≤–∫–∞–∑–∞—Ç–∏ —Ç–∏–ø —è–≤–Ω–æ ‚Äì –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ.
//..............................................................
//-----------------------------–í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º–∏--------------------------
// Formik —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –æ–±—Ä–æ–±–ª—è—î –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏ —Ç–∞ –∑–±–∏—Ä–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤. –ü—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ñ–æ—Ä–º–∏ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—è, —è–∫—É –º–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ –ø—Ä–æ–ø—Å–æ–º onSubmit –¥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Formik. –ù–∞–π–∫—Ä–∞—â–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞ ‚Äì —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–∫—Ä–µ–º—É —ñ–º–µ–Ω–æ–≤–∞–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é handleSubmit —ñ –ø–µ—Ä–µ–¥–∞—Ç–∏ —ó—ó —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è –ø—Ä–æ–ø—Å–∞.

// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤–±—É–¥–æ–≤–∞–Ω–∏–π —Ç–∏–ø FormikHelpers
// import { Formik, Form, Field, FormikHelpers } from 'formik';

// interface OrderFormValues {
//   username: string;
//   email: string;
// }

// const initialValues: OrderFormValues = {
//   username: '',
//   email: '',
// };

// export default function OrderForm() {
//   const handleSubmit = (
//     values: OrderFormValues,
//     actions: FormikHelpers<OrderFormValues>
//   ) => {
//     console.log('Order data:', values);
//     actions.resetForm();
//   };

//   return (
//     <Formik initialValues={initialValues} onSubmit={handleSubmit}>
//       <Form>
//         <Field type="text" name="username" />
//         <Field type="email" name="email" />
//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }
/**–§—É–Ω–∫—Ü—ñ—è handleSubmit –º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:

values ‚Äì —Ü–µ –æ–±‚Äô—î–∫—Ç –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏, —Ç–∏–ø—ñ–∑–æ–≤–∞–Ω–∏–π —è–∫ FeedbackFormValues.
actions ‚Äì –Ω–∞–±—ñ—Ä –º–µ—Ç–æ–¥—ñ–≤, —è–∫—ñ –Ω–∞–¥–∞—î Formik –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–æ—é. –û–¥–∏–Ω —ñ–∑ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –≤–∂–∏–≤–∞–Ω–∏—Ö ‚Äì resetForm, —è–∫–∏–π —Å–∫–∏–¥–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö (initialValues). –¢–∏–ø FormikHelpers<T> –≤–∂–µ –≤–∫–ª—é—á–µ–Ω–∏–π —É –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É.


üß† –Ø–∫ —ñ —É –≤–∏–ø–∞–¥–∫—É –∑ form action, Formik –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—Å–æ–≤—É—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É HTML-—Ñ–æ—Ä–º–∏ (–ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏) —Ç–∞ –∑–±–∏—Ä–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤. –í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ –¥–∞–Ω—ñ –∑—Ä—É—á–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é ‚Äì —É –≤–∏–≥–ª—è–¥—ñ –æ–±'—î–∫—Ç–∞ values. */
//........................................
// import { useId } from 'react';
// import { Formik, Form, Field, FormikHelpers } from 'formik';
// import css from './OrderForm.module.css';

// interface OrderFormValues {
//   username: string;
//   email: string;
// }

// const initialValues: OrderFormValues = {
//   username: 'Jacob',
//   email: 'j.mercer@mail.com',
// };

// export default function OrderForm() {
//   const fieldId = useId();

//   const handleSubmit = (
//     values: OrderFormValues,
//     actions: FormikHelpers<OrderFormValues>
//   ) => {
//     console.log('Order data:', values);
//     actions.resetForm();
//   };

//   return (
//     <Formik initialValues={initialValues} onSubmit={handleSubmit}>
//       <Form className={css.form}>
//         <fieldset className={css.fieldset}>
//           <legend className={css.legend}>Client Info</legend>

//           <label className={css.label} htmlFor={`${fieldId}-username`}>
//             Name
//           </label>
//           <Field
//             className={css.field}
//             type="text"
//             name="username"
//             id={`${fieldId}-username`}
//           />

//           <label className={css.label} htmlFor={`${fieldId}-email`}>
//             Email
//           </label>
//           <Field
//             className={css.field}
//             type="email"
//             name="email"
//             id={`${fieldId}-email`}
//           />
//         </fieldset>

//         <button className={css.btn} type="submit">
//           Place order
//         </button>
//       </Form>
//     </Formik>
//   );
// }

//.........................................
/**--------------------------–¢–∏–ø–∏ –ø–æ–ª—ñ–≤-------------------------
–ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Field —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –∑–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–≥ <input>. –ê–ª–µ —ñ–Ω–æ–¥—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ —ñ–Ω—à–∏–π —Ç–∏–ø –ø–æ–ª—è ‚Äì –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ä–∞–¥—ñ–æ–∫–Ω–æ–ø–∫–∏, —á–µ–∫–±–æ–∫—Å–∏, —Å–µ–ª–µ–∫—Ç —á–∏ –±–∞–≥–∞—Ç–æ—Ä—è–¥–∫–æ–≤–µ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ (textarea).

–©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ HTML-–µ–ª–µ–º–µ–Ω—Ç, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç–∏ –ø—Ä–æ–ø as="–Ω–∞–∑–≤–∞_—Ç–µ–≥–∞" –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É Field.

==============–°–µ–ª–µ–∫—Ç===================
–©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤–∏–ø–∞–¥–∞—é—á–∏–π —Å–ø–∏—Å–æ–∫ (select), –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è Field –∑ –ø—Ä–æ–ø–æ–º as="select". –û–ø—Ü—ñ—ó –≤–∫–∞–∑—É—é—Ç—å—Å—è –∑–≤–∏—á–∞–π–Ω–∏–º–∏ HTML-—Ç–µ–≥–∞–º–∏ <option>. */
//.........................
// import { useId } from 'react';
// import { Formik, Form, Field, FormikHelpers } from 'formik';

// interface OrderFormValues {
//   username: string;
//   email: string;
//   deliveryTime: string;
// }

// const initialValues: OrderFormValues = {
//   username: '',
//   email: '',
//   deliveryTime: '',
// };

// export default function OrderForm() {
//   const fieldId = useId();

//   const handleSubmit = (
//     values: OrderFormValues,
//     actions: FormikHelpers<OrderFormValues>
//   ) => {
//     console.log(values);
//     actions.resetForm();
//   };

//   return (
//     <Formik initialValues={initialValues} onSubmit={handleSubmit}>
//       <Form>
//         <Field type="text" name="username" />
//         <Field type="email" name="email" />

//         <label htmlFor={`${fieldId}-deliveryTime`}>
//           Preferred delivery time
//         </label>
//         <Field as="select" name="deliveryTime" id={`${fieldId}-deliveryTime`}>
//           <option value="">-- Choose delivery time --</option>
//           <option value="morning">Morning (8:00‚Äì12:00)</option>
//           <option value="afternoon">Afternoon (12:00‚Äì16:00)</option>
//           <option value="evening">Evening (16:00‚Äì20:00)</option>
//         </Field>

//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }
//.................................
/**–ú–∏ –¥–æ–¥–∞–ª–∏ –ø–æ–ª–µ deliveryTime, —è–∫–µ –¥–æ–∑–≤–æ–ª—è—î –≤–∏–±—Ä–∞—Ç–∏ —á–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏:

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ Field as="select"
–î–æ–¥–∞–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π name
–î–æ–¥–∞–ª–∏ –¥–æ initialValues –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
–ù–µ –∑–∞–±—É–ª–∏ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–∏–ø

üß† –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è deliveryTime –≤ initialValues –º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –æ–¥–Ω–æ–º—É –∑ value –≤ <option>.


-------------–†–∞–¥—ñ–æ–∫–Ω–æ–ø–∫–∏-----------------

–©–æ–± –¥–æ–¥–∞—Ç–∏ —Ä–∞–¥—ñ–æ–∫–Ω–æ–ø–∫–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ Field –∑ –æ–¥–Ω–∞–∫–æ–≤–∏–º name, –∞–ª–µ —Ä—ñ–∑–Ω–∏–º–∏ value.

–í—Å—ñ –∫–Ω–æ–ø–∫–∏ –≤ –≥—Ä—É–ø—ñ –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ –æ–¥–Ω–∞–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è name.
–ö–æ–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ –º–∞—î —Å–≤—ñ–π value.
–ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞–¥–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ initialValues.
 */
//..................................
// import { Formik, Form, Field, FormikHelpers } from 'formik';

// interface OrderFormValues {
//   delivery: string;
// }

// const initialValues: OrderFormValues = {
//   delivery: 'pickup',
// };

// export default function OrderForm() {
//   const handleSubmit = (
//     values: OrderFormValues,
//     actions: FormikHelpers<OrderFormValues>
//   ) => {
//     console.log(values);
//     actions.resetForm();
//   };

//   return (
//     <Formik initialValues={initialValues} onSubmit={handleSubmit}>
//       <Form>
//         <label>
//           <Field type="radio" name="delivery" value="pickup" />
//           Pickup
//         </label>
//         <label>
//           <Field type="radio" name="delivery" value="courier" />
//           Courier
//         </label>
//         <label>
//           <Field type="radio" name="delivery" value="drone" />
//           Drone delivery
//         </label>

//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }

//.................................

/**---------------–ß–µ–∫–±–æ–∫—Å–∏------------------------

–î–ª—è –¥–µ–∫—ñ–ª—å–∫–æ—Ö —á–µ–∫–±–æ–∫—Å—ñ–≤ –∑ –æ–¥–Ω–∏–º —ñ–º‚Äô—è–º, Formik –∑–±–µ—Ä—ñ–≥–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è —É –º–∞—Å–∏–≤—ñ.

–í—Å—ñ Field –º–∞—é—Ç—å –æ–¥–Ω–∞–∫–æ–≤–µ —ñ–º‚Äô—è name.
–ö–æ–∂–µ–Ω Field –º–∞—î —Ä—ñ–∑–Ω–∏–π value.
–ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ initialValues ‚Äì –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤. */
//....................................
// import { Formik, Form, Field, FormikHelpers } from 'formik';

// interface OrderFormValues {
//   restrictions: string[];
// }

// const initialValues: OrderFormValues = {
//   restrictions: [],
// };

// export default function OrderForm() {
//   const handleSubmit = (
//     values: OrderFormValues,
//     actions: FormikHelpers<OrderFormValues>
//   ) => {
//     console.log(values);
//     actions.resetForm();
//   };

//   return (
//     <Formik initialValues={initialValues} onSubmit={handleSubmit}>
//       <Form>
//         <label>
//           <Field type="checkbox" name="restrictions" value="vegan" />
//           Vegan
//         </label>
//         <label>
//           <Field type="checkbox" name="restrictions" value="gluten-free" />
//           Gluten-free
//         </label>
//         <label>
//           <Field type="checkbox" name="restrictions" value="nut-free" />
//           Nut-free
//         </label>

//         <button type="submit">Place order</button>
//       </Form>
//     </Formik>
//   );
// }
//.......................................
/**-------------–ï–ª–µ–º–µ–Ω—Ç textarea----------------

–î–ª—è –¥–æ–≤—ñ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–æ–º–µ–Ω—Ç–∞—Ä –∞–±–æ –æ–ø–∏—Å) –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –ø–æ–ª–µ textarea. –í–æ–Ω–æ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —á–µ—Ä–µ–∑ Field as="textarea".

 */
//‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ
// import { useId } from 'react';
// import { Formik, Form, Field, FormikHelpers } from 'formik';
// import css from './OrderForm.module.css';
// import * as Yup from 'yup';

// interface OrderFormValues {
//   username: string;
//   email: string;
//   delivery: string;
//   deliveryTime: string;
//   restrictions: string[];
//   message: string;
// }

// const initialValues: OrderFormValues = {
//   username: '',
//   email: '',
//   delivery: 'pickup',
//   deliveryTime: '',
//   restrictions: [],
//   message: '',
// };

// export default function OrderForm() {
//   const fieldId = useId();

//   const handleSubmit = (
//     values: OrderFormValues,
//     actions: FormikHelpers<OrderFormValues>
//   ) => {
//     console.log('Submitted order:', values);
//     actions.resetForm();
//   };

//   return (
//     <Formik initialValues={initialValues} onSubmit={handleSubmit}>
//       <Form className={css.form}>
//         <fieldset className={css.fieldset}>
//           <legend className={css.legend}>Client Info</legend>

//           <label htmlFor={`${fieldId}-username`} className={css.label}>
//             Name
//           </label>
//           <Field
//             type="text"
//             name="username"
//             id={`${fieldId}-username`}
//             className={css.input}
//           />

//           <label htmlFor={`${fieldId}-email`} className={css.label}>
//             Email
//           </label>
//           <Field
//             type="email"
//             name="email"
//             id={`${fieldId}-email`}
//             className={css.input}
//           />
//         </fieldset>

//         <fieldset className={css.fieldset}>
//           <legend className={css.legend}>Delivery method</legend>

//           <label className={css.option}>
//             <Field type="radio" name="delivery" value="pickup" />
//             Pickup
//           </label>
//           <label className={css.option}>
//             <Field type="radio" name="delivery" value="courier" />
//             Courier
//           </label>
//           <label className={css.option}>
//             <Field type="radio" name="delivery" value="drone" />
//             Drone delivery
//           </label>
//         </fieldset>

//         <fieldset className={css.fieldset}>
//           <legend className={css.legend}>Dietary restrictions</legend>

//           <label className={css.option}>
//             <Field type="checkbox" name="restrictions" value="vegan" />
//             Vegan
//           </label>
//           <label className={css.option}>
//             <Field type="checkbox" name="restrictions" value="gluten-free" />
//             Gluten-free
//           </label>
//           <label className={css.option}>
//             <Field type="checkbox" name="restrictions" value="nut-free" />
//             Nut-free
//           </label>
//         </fieldset>

//         <label htmlFor={`${fieldId}-deliveryTime`} className={css.label}>
//           Preferred delivery time
//         </label>
//         <Field
//           as="select"
//           name="deliveryTime"
//           id={`${fieldId}-deliveryTime`}
//           className={css.input}
//         >
//           <option value="">-- Choose delivery time --</option>
//           <option value="morning">Morning (8:00‚Äì12:00)</option>
//           <option value="afternoon">Afternoon (12:00‚Äì16:00)</option>
//           <option value="evening">Evening (16:00‚Äì20:00)</option>
//         </Field>

//         <label htmlFor={`${fieldId}-message`} className={css.label}>
//           Additional message
//         </label>
//         <Field
//           as="textarea"
//           name="message"
//           rows={4}
//           id={`${fieldId}-message`}
//           className={css.textarea}
//         />

//         <button type="submit" className={css.button}>
//           Place order
//         </button>
//       </Form>
//     </Formik>
//   );
// }

//‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ

/**------------------–í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ Yup-------------------------
–í–∞–ª—ñ–¥–∞—Ü—ñ—è ‚Äì —Ü–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –∑–Ω–∞—á–µ–Ω—å –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º. Formik –ø—ñ–¥—Ç—Ä–∏–º—É—î —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é –∑ Yup ‚Äì –ø–æ—Ç—É–∂–Ω–æ—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫–æ—é –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ —Å—Ö–µ–º –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó.

–ü–æ–∫—Ä–∞—â—É—î –¥–æ—Å–≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–Ω–µ —Ç—Ä–µ–±–∞ —á–µ–∫–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑ —Å–µ—Ä–≤–µ—Ä–∞)
–ó–∞—Ö–∏—â–∞—î –≤—ñ–¥ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è
–î–∞—î –∑–º–æ–≥—É –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏ –ø—Ä—è–º–æ –±—ñ–ª—è –ø–æ–ª—ñ–≤

–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è Yup

–í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É Yup:

npm install yup

–Ü–º–ø–æ—Ä—Ç—É—î–º–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º–∏:

import * as Yup from "yup";

//‚úÖ‚úÖ

üß† Formik –ø—ñ–¥—Ç—Ä–∏–º—É—î Yup "–∑ –∫–æ—Ä–æ–±–∫–∏". –©–æ–± —É–≤—ñ–º–∫–Ω—É—Ç–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é ‚Äì –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ö–µ–º—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —ñ –ø–µ—Ä–µ–¥–∞—Ç–∏ —ó—ó –≤ –ø—Ä–æ–ø validationSchema –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Formik.

–Ø–∫ –ø—Ä–∞—Ü—é—î —Å—Ö–µ–º–∞ Yup
Yup –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î "—Å—Ö–µ–º–∏", —â–æ –æ–ø–∏—Å—É—é—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–±'—î–∫—Ç–∞ —Ç–∞ –ø—Ä–∞–≤–∏–ª–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏. –ù–∞–ø—Ä–∏–∫–ª–∞–¥:

const Schema = Yup.object().shape({
  username: Yup.string().required("Username is required"),
});

–¶–µ –æ–∑–Ω–∞—á–∞—î:

–û–±‚Äô—î–∫—Ç –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å username
–¶–µ –º–∞—î –±—É—Ç–∏ —Ä—è–¥–æ–∫ (string)
–í—ñ–Ω –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π (required)
–Ø–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞ ‚Äì –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "Username is required"

üß† –ö–æ–∂–µ–Ω –∫–ª—é—á –≤ –æ–±‚Äô—î–∫—Ç—ñ –ø–æ–≤–∏–Ω–µ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –ø–æ–ª—é –≤ initialValues.

//‚úÖ‚úÖ
–°—Ç–≤–æ—Ä–∏–º–æ —Å—Ö–µ–º—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –±–ª–æ–∫—É "Client Info" –∑ –ø–æ–ª—è–º–∏ username —Ç–∞ email.


const OrderFormSchema = Yup.object().shape({
  username: Yup.string()
    .min(2, "Name must be at least 2 characters")
    .max(30, "Name is too long")
    .required("Name is required"),
  email: Yup.string()
    .email("Invalid email format")
    .required("Email is required"),
});

–§—É–Ω–∫—Ü—ñ—ó Yup.string(), Yup.min(), Yup.max(), Yup.required() —ñ —ñ–Ω—à—ñ ‚Äì —Ü–µ —Ñ—É–Ω–∫—Ü—ñ—ó-–≤–∞–ª—ñ–¥–∞—Ç–æ—Ä–∏, —è–∫—ñ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –¥–æ–¥–∞—Ç–∏ –ø–µ–≤–Ω–∏–π –∫—Ä–∏—Ç–µ—Ä—ñ–π –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó. –ö–æ–∂–µ–Ω –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏ –≤—ñ–¥ –Ω—É–ª—è –¥–æ –¥–≤–æ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤.

–ø–µ—Ä—à–∏–π ‚Äì —Ü–µ –∫—Ä–∏—Ç–µ—Ä—ñ–π –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫–∞ —á–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —á–∏—Å–ª–∞
–¥—Ä—É–≥–∏–π ‚Äì —Ü–µ —Ä—è–¥–æ–∫, —è–∫–∏–π –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π —è–∫ –ø–æ–º–∏–ª–∫–∞ —É —Ä–∞–∑—ñ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó.

üß† –ù–µ —É –≤—Å—ñ—Ö –≤–∞–ª—ñ–¥–∞—Ç–æ—Ä—ñ–≤ —î –∫—Ä–∏—Ç–µ—Ä—ñ—ó –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É, —â–æ–± —Ü–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–∏–≤–∏—Ç–∏—Å—è –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é Yup.*/
//‚úÖ‚úÖ//‚úÖ‚úÖ//‚úÖ‚úÖ//‚úÖ‚úÖ//‚úÖ‚úÖ//‚úÖ‚úÖ//‚úÖ‚úÖ
// –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Å—Ö–µ–º—É –¥–æ Formik —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å validationSchema, –≤ —è–∫–∏–π —Ç—Ä–µ–±–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ —Å—Ö–µ–º—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó Yup.

// <Formik
//   initialValues={initialValues}
//   validationSchema={OrderFormSchema}
//   onSubmit={handleSubmit}
// >
//   {/* —Ñ–æ—Ä–º–∞ */}
// </Formik>

// –ü—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó, –º–∏ –Ω–µ –∑–º–æ–∂–µ–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ä–º—É, —è–∫—â–æ –≤ –æ–¥–Ω–æ–º—É –∑ –ø–æ–ª—ñ–≤ –±—É–¥–µ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ –≤–∞–ª—ñ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è.

// Formik –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ:

// –ü—ñ—Å–ª—è –≤–∏—Ö–æ–¥—É –∑ –ø–æ–ª—è.
// –ü—ñ—Å–ª—è –∫–æ–∂–Ω–æ—ó –∑–º—ñ–Ω–∏.
// –ü–µ—Ä–µ–¥ —Å–∞–±–º—ñ—Ç–æ–º.

// üß† Formik –≤—ñ–¥—Å—Ç–µ–∂—É—î, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ç–æ—Ä–∫–∞–≤—Å—è –ø–æ–ª—è. –¶–µ –ø–æ–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –≤ —Å—Ç–∞–Ω touched —ñ –ª–∏—à–µ —Ç–æ–¥—ñ –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è –ø–æ–º–∏–ª–∫–∞.

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫

// Formik –Ω–∞–¥–∞—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ErrorMessage, —è–∫–∏–π –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ –ø—ñ–¥ –ø–æ–ª–µ–º, —â–æ–± –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç –ø–æ–º–∏–ª–∫–∏.

// <Field type="text" name="username" />
// <ErrorMessage name="username" component="span" className={css.error} />

// –ü—Ä–æ–ø name –º–∞—î –∑–±—ñ–≥–∞—Ç–∏—Å—è –∑ —ñ–º–µ–Ω–µ–º Field
// component="span" –≤–∫–∞–∑—É—î, —â–æ –ø–æ–º–∏–ª–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å—Å—è —É —Ç–µ–∑—ñ span, —â–æ –∑—Ä—É—á–Ω–æ –¥–ª—è —Å—Ç–∏–ª—ñ–≤.

// üí° –ü–æ–¥–∏–≤—ñ—Ç—å—Å—è –ø—Ä–∏–∫–ª–∞–¥ —É —Ä–µ–¥–∞–∫—Ç–æ—Ä—ñ ‚Äì –≤—ñ–Ω –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î, —è–∫ —É—Å–µ –ø—Ä–∞—Ü—é—î —Ä–∞–∑–æ–º.
//...............................................................................
//...............................................................................
import { useId } from 'react';
import { Formik, Form, Field, ErrorMessage, FormikHelpers } from 'formik';
import * as Yup from 'yup';
import css from './OrderForm.module.css';

interface OrderFormValues {
  username: string;
  email: string;
  delivery: string;
  restrictions: string[];
  deliveryTime: string;
  message: string;
}

const initialValues: OrderFormValues = {
  username: '',
  email: '',
  delivery: 'pickup',
  restrictions: [],
  deliveryTime: '',
  message: '',
};

const validationSchema = Yup.object().shape({
  username: Yup.string()
    .min(2, 'Name too short')
    .max(50, 'Name too long')
    .required('Name is required'),
  email: Yup.string()
    .email('Invalid email address')
    .required('Email is required'),
  delivery: Yup.string()
    .oneOf(['pickup', 'courier', 'drone'], 'Invalid delivery method')
    .required('Delivery method is required'),
  restrictions: Yup.array().of(Yup.string()),
  deliveryTime: Yup.string().required('Select delivery time'),
  message: Yup.string()
    .min(5, 'Message too short')
    .max(300, 'Message too long'),
});

export default function OrderForm() {
  const fieldId = useId();

  const handleSubmit = (
    values: OrderFormValues,
    actions: FormikHelpers<OrderFormValues>
  ) => {
    console.log('Form submitted:', values);
    actions.resetForm();
  };

  return (
    <Formik
      initialValues={initialValues}
      validationSchema={validationSchema}
      onSubmit={handleSubmit}
    >
      <Form className={css.form}>
        <fieldset className={css.fieldset}>
          <legend className={css.legend}>Client Info</legend>

          <label htmlFor={`${fieldId}-username`}>Name</label>
          <Field
            type="text"
            name="username"
            id={`${fieldId}-username`}
            className={css.input}
          />
          <ErrorMessage
            name="username"
            component="span"
            className={css.error}
          />

          <label htmlFor={`${fieldId}-email`}>Email</label>
          <Field
            type="email"
            name="email"
            id={`${fieldId}-email`}
            className={css.input}
          />
          <ErrorMessage name="email" component="span" className={css.error} />
        </fieldset>

        <fieldset className={css.fieldset}>
          <legend className={css.legend}>Delivery Method</legend>

          <label className={css.radioLabel}>
            <Field type="radio" name="delivery" value="pickup" />
            Pickup
          </label>
          <label className={css.radioLabel}>
            <Field type="radio" name="delivery" value="courier" />
            Courier
          </label>
          <label className={css.radioLabel}>
            <Field type="radio" name="delivery" value="drone" />
            Drone delivery
          </label>
          <ErrorMessage
            name="delivery"
            component="span"
            className={css.error}
          />
        </fieldset>

        <fieldset className={css.fieldset}>
          <legend className={css.legend}>Dietary Restrictions</legend>

          <label className={css.checkboxLabel}>
            <Field type="checkbox" name="restrictions" value="vegan" />
            Vegan
          </label>
          <label className={css.checkboxLabel}>
            <Field type="checkbox" name="restrictions" value="gluten-free" />
            Gluten-free
          </label>
          <label className={css.checkboxLabel}>
            <Field type="checkbox" name="restrictions" value="nut-free" />
            Nut-free
          </label>
        </fieldset>

        <label htmlFor={`${fieldId}-deliveryTime`}>
          Preferred delivery time
        </label>
        <Field
          as="select"
          name="deliveryTime"
          id={`${fieldId}-deliveryTime`}
          className={css.input}
        >
          <option value="">-- Choose delivery time --</option>
          <option value="morning">Morning (8:00‚Äì12:00)</option>
          <option value="afternoon">Afternoon (12:00‚Äì16:00)</option>
          <option value="evening">Evening (16:00‚Äì20:00)</option>
        </Field>
        <ErrorMessage
          name="deliveryTime"
          component="span"
          className={css.error}
        />

        <label htmlFor={`${fieldId}-message`}>Additional notes</label>
        <Field
          as="textarea"
          name="message"
          id={`${fieldId}-message`}
          rows={5}
          className={css.textarea}
        />
        <ErrorMessage name="message" component="span" className={css.error} />

        <button type="submit" className={css.button}>
          Place order
        </button>
      </Form>
    </Formik>
  );
}

//...............................................................................
